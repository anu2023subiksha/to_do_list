import tkinter as tk#its used to create a graphical user interface 
from tkinter import messagebox
app=tk.Tk()hashtag#app is an instance of a specific class.tk provides tools.Tk () is used to store all your
hashtag#changes like window creation,buttons etc...
app.title("to-do list") 
task_listbox=tk.Listbox(app,height=10,width=40)
task_listbox.pack(pady=10)hashtag#vertical length
def add_task():
 task=new_task_entry.get()
 if task:
 task_listbox.insert(tk.END,task)
 new_task_entry.delete(0,tk.END)
 else:
 messagebox.showwarning("please","enter a task")
def remove_task():
 selected_task_index=task_listbox.curselection()
 if selected_task_index:
 task_listbox.delete(selected_task_index)
 else:
 messagebox.warning("please"," enter a task to be deleted")
def list_tasks():
 tasks=task_listbox.get(0,tk.END)
 if tasks:
 tasks_text="\n ".join(tasks)
 messagebox.showinfo("task list",f"current tasks:{tasks_text}")
 else:
 messagebox.showwarning("enter a task"," no task added yet")
def mark_as_complete():
 selected_task_index=task_listbox.curselection()
 if selected_task_index:
 task_listbox.itemconfig(selected_task_index,{"bg":"light green"})
 else:
 messagebox.showwarning("please ","select a task to be marked as complete")
def save_tasks():
 tasks=task_listbox.get(0,tk.END)
 with open ("tasks.text","w") as file:
 for task in tasks:
 file.write(task+"\n")
 messagebox.showinfo("task list","task saved successfully")
def load_tasks():
 try:
 with open("tasks.text","r") as file:
 tasks=file.readlines()
 task_listbox.delete(0,tk.END)
 for task in tasks:
 task_listbox.insert(tk.END,task.strip())
 messagebox.showinfo("task list","task loaded successfully")
 except FileNotFoundError:
 messagebox.showwarning("task list","no saved task found")
 
 
new_task_entry = tk.Entry(app, width=30)
new_task_entry.pack(pady=5)
add_button=tk.Button(app,text="add task",command=add_task)
add_button.pack(pady=5)
remove_button=tk.Button(app,text="remove task",command=remove_task)
remove_button.pack(pady=5)
list_button=tk.Button(app,text="list tasks",command=list_tasks)
list_button.pack(pady=5)
complete_button=tk.Button(app,text="mark as complete",command=mark_as_complete)
complete_button.pack(pady=5)
save_button=tk.Button(app,text="save tasks",command=save_tasks)
save_button.pack(pady=5)
load_button=tk.Button(app,text="load tasks",command=load_tasks)
load_button.pack(pady=5)
app.mainloop()
